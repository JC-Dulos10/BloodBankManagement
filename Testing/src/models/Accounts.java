/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 * LICENSE MO ULO MO HAHAHAHHAHAHAHAHHAHA - Altheo Saquilayan
 */
package models;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import controller.errorcheck;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import view.Display;

/**
 *
 * @author JC
 * @author hotdog
 * @author chisdog
 * @author corndog
 * @author hungarian_sausage mhhmm
 * 
 */

public class Accounts extends javax.swing.JFrame implements DBOperations,Display{

    /**
     * Creates new form category
     */
    
    String lname;
    String isAdmin;
    String pass;
    int userID;
    
    public Accounts() {
        initComponents();
        table_update();
    }

    public Accounts(String name, String isAdmin, String pass){
        initComponents();
        table_update();
        this.lname = name;
        this.isAdmin = isAdmin;
        this.pass = pass;
        getId();
    }    
    
    DefaultTableModel model = new DefaultTableModel();
    PreparedStatement ptsmnt;
    ResultSet rs;
    
    
    
    
    public void getId(){
        try {
            Connection conl = createConnection();
            ptsmnt = conl.prepareStatement(GET_ID);
            ptsmnt.setString(1, lname);
            ptsmnt.setString(2, pass);
            rs = ptsmnt.executeQuery();
            while(rs.next()){
                userID = rs.getInt("id");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this,SYS_ERROR);
        }
        
    }
    
    public void edithistory(String action, int id){
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(DATE_TIME);
        LocalDateTime now = LocalDateTime.now();
        String date = dtf.format(now);
        try {
            Connection conl = createConnection();
            ptsmnt = conl.prepareStatement(INSERT_HISTORY_ACCOUNTS);
            ptsmnt.setInt(1, id);
            ptsmnt.setString(2, action);
            ptsmnt.setString(3, date);
            ptsmnt.setInt(4, userID);
            ptsmnt.executeUpdate();      
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(this,SYS_ERROR);
            }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtstatus = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtuser = new javax.swing.JTextField();
        txtpass = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        txtisadmin = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(38, 166, 154));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pack Type");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Exit");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Donor");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Blood Pack");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Edit History");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Admin");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addGap(32, 32, 32)
                .addComponent(jLabel4)
                .addGap(36, 36, 36)
                .addComponent(jLabel5)
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setText("Accounts");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Accounts", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel9.setText("User Name");

        jLabel10.setText("Status");

        txtstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Suspended", " " }));

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setText("Password");

        txtuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtuserActionPerformed(evt);
            }
        });

        jLabel12.setText("isAdmin");

        txtisadmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtisadmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtuser)
                    .addComponent(txtstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtpass))
                .addGap(49, 49, 49))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtisadmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username", "Status", "isAdmin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(70, 70, 70)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void table_update(){
        try {
            int c;
            try {
                Connection conl = createConnection();
                ptsmnt = conl.prepareStatement(UPDATE_TABLE_ACCOUNTS);
                rs = ptsmnt.executeQuery();
                
                ResultSetMetaData rsd = rs.getMetaData();
                c = rsd.getColumnCount();
                
                DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
                d.setRowCount(0);
                
                
                while(rs.next()){
                    Vector v2 = new Vector();
                    
                    for(int i=1; i<=c; i++){
                       v2.add(rs.getString("id"));
                       v2.add(rs.getString("account_name"));
                       v2.add(rs.getString("status"));
                       v2.add(rs.getString("isAdmin"));
                    }
                    
                    d.addRow(v2);
                }
                
                
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this,SYS_ERROR);
            }
             
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,SYS_ERROR);
        }
        
        
    
    
    
    
    }
    
    public int countAdmin(){
        int count = 0;
        try {
            Connection conl = createConnection();
            ptsmnt = conl.prepareStatement(GET_ADMIN_COUNT);
            ptsmnt.setString(1, "Yes");
            rs = ptsmnt.executeQuery();
            rs.next();
            count = rs.getInt(1);
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this,SYS_ERROR);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,SYS_ERROR);
        }
        return  count;
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        errorcheck err = new errorcheck();// Calls the error and restriction method
        String test= "12";
        String user = txtuser.getText();
        String pass = txtpass.getText();
        String status = txtstatus.getSelectedItem().toString();
        String isAdmin =txtisadmin.getSelectedItem().toString();
        int generatedID = 0;
        int count = countAdmin();
        if(count >= 5){
            JOptionPane.showMessageDialog(this, CANNOT_ADD);
        } else {
                try {
                Connection conl = createConnection();
                ptsmnt = conl.prepareStatement(INSERT_ACCOUNT, Statement.RETURN_GENERATED_KEYS);
                ptsmnt.setString(1, user);


               //If input String value is empty
                if(err.isEmpty(user) == true){
                    JOptionPane.showMessageDialog(this, NOT_EMPTY);
                    txtuser.requestFocus();
                }
                //If input contains illegal characters that are not good for databases
                else if(err.isContainIllegalChar(user) == true){
                    JOptionPane.showMessageDialog(this, "Input username contains Illegal character!!");
                    txtuser.requestFocus();
                }
                //If input is number only
                else if(err.numberOrNot(user)== true){
                   JOptionPane.showMessageDialog(null, NAME_NUM);
                   txtuser.requestFocus();
                }
                //If input username first text is number
                else if(err.firstNumberOrNot(user) == true){
                    JOptionPane.showMessageDialog(this, FIRST_NOT_NUM);
                    txtuser.requestFocus();
                }
                //If input has whitespace
                else if(err.CheckWhiteSpace(user) == true){
                    JOptionPane.showMessageDialog(this, NO_SPACE);
                    txtuser.requestFocus();
                }
                //If input has less than eight of characters
                else if(err.CharMinEight(user) == true){
                    JOptionPane.showMessageDialog(this, MIN_EIGHT);
                    txtuser.requestFocus();
                }


                else{
                        ptsmnt.setString(2, pass);

                        //If input String value is empty
                        if(err.isEmpty(user) == true){
                            JOptionPane.showMessageDialog(this, NOT_EMPTY);
                            txtpass.requestFocus();
                        }
                        // If Password contains illegal characters
                        else if(err.isContainIllegalChar(pass) == true){
                            JOptionPane.showMessageDialog(this, NO_ILLEGAL_CHAR);
                            txtpass.requestFocus();
                         }
                         //If Password contains whitespace
                         else if(err.CheckWhiteSpace(pass) == true){
                             JOptionPane.showMessageDialog(this, NO_SPACE);
                             txtpass.requestFocus();
                         }
                         //If Input is less than 12 characters
                         else if(err.CharMinTwelve(pass) == true){
                             JOptionPane.showMessageDialog(this,MIN_TWELVE);
                             txtpass.requestFocus();
                         }
                         //If input does not contain one uppercase and one number
                         else if(err.checkInput(pass) == false){
                             JOptionPane.showMessageDialog(this,ONE_NUM_ONE_UP);
                             txtpass.requestFocus();
                         }
                         else{
                            ptsmnt.setString(3, status);
                            ptsmnt.setString(4, isAdmin);
                            ptsmnt.executeUpdate();
                            ResultSet generatedKeyResult = ptsmnt.getGeneratedKeys();
                            if(generatedKeyResult.next()){
                                generatedID = generatedKeyResult.getInt(1);
                            }
                            JOptionPane.showMessageDialog(this, USER_ADDED);
                            table_update();
                            edithistory(ID_ADDED, generatedID);

                            txtuser.setText("");
                            txtpass.setText("");
                            txtuser.requestFocus();  
                         }




                }



            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this,SYS_ERROR);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,SYS_ERROR);
            }
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        int selectIndex = jTable1. getSelectedRow();
        
        
        errorcheck err = new errorcheck();// Calls the error and restriction methods 
        
        int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
        String user = txtuser.getText();
        String pass = txtpass.getText();   
        String status = txtstatus.getSelectedItem().toString();
        String isAdmin =txtisadmin.getSelectedItem().toString();
        
        try {
            Connection conl = createConnection();
            ptsmnt = conl.prepareStatement(UPDATE_ACCOUNT);
            ptsmnt.setString(1, user);
            
            
            //If input String value is empty
            if(err.isEmpty(user) == true){
                JOptionPane.showMessageDialog(this, NOT_EMPTY);
                txtuser.requestFocus();
            }
            //If input contains illegal characters that are not good for databases
            else if(err.isContainIllegalChar(user) == true){
                JOptionPane.showMessageDialog(this, NO_ILLEGAL_CHAR);
                txtuser.requestFocus();
            }
            //If input is number only
            else if(err.numberOrNot(user)== true){
               JOptionPane.showMessageDialog(this, NAME_NUM);
               txtuser.requestFocus();
            }
            //If input username first text is number
            else if(err.firstNumberOrNot(user) == true){
                JOptionPane.showMessageDialog(this, FIRST_NOT_NUM);
                txtuser.requestFocus();
            }
            //If input has whitespace
            else if(err.CheckWhiteSpace(user) == true){
                JOptionPane.showMessageDialog(this, NO_SPACE);
                txtuser.requestFocus();
            }
            //If input has less than eight of characters
            else if(err.CharMinEight(user) == true){
                JOptionPane.showMessageDialog(this, MIN_EIGHT);
                txtuser.requestFocus();
            }
            else{
                ptsmnt.setString(2, pass);
                

                //If input String value is empty
                if(err.isEmpty(pass) == true){
                    JOptionPane.showMessageDialog(this, NOT_EMPTY);
                    txtpass.requestFocus();
                }
                // If Password contains illegal characters
                else if(err.isContainIllegalChar(pass) == true){
                   JOptionPane.showMessageDialog(this, NO_ILLEGAL_CHAR);
                   txtpass.requestFocus();
                }
                //If Password contains whitespace
                else if(err.CheckWhiteSpace(pass) == true){
                    JOptionPane.showMessageDialog(this, NO_SPACE);
                    txtpass.requestFocus();
                }
                //If Input is less than 12 characters
                else if(err.CharMinTwelve(pass) == true){
                    JOptionPane.showMessageDialog(this,MIN_TWELVE);
                    txtpass.requestFocus();
                }
                //If input does not contain one uppercase and one number
                else if(err.checkInput(pass) == false){
                    JOptionPane.showMessageDialog(this,ONE_NUM_ONE_UP);
                    txtpass.requestFocus();
                }
                else{
                    ptsmnt.setString(3, status);
                    ptsmnt.setString(4, isAdmin);
                    ptsmnt.setInt(5, id);
                    ptsmnt.executeUpdate();
                    JOptionPane.showMessageDialog(this, UPDATE_ACCT);
                    table_update();
                    edithistory(UPDATE_ID, id);
                    jButton1.setEnabled(true);
                    txtuser.setText("");
                    txtpass.setText("");
                    txtpass.requestFocus();
                }
                
              
            }
           
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(this,SYS_ERROR);
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this,SYS_ERROR);
        }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         jButton1.setEnabled(false);
         DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
         int selectIndex = jTable1.getSelectedRow();        
         txtuser.setText(d1.getValueAt(selectIndex, 1).toString());
         int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
        try {
            Connection conl = createConnection();
            ptsmnt = conl.prepareStatement(GET_PASS);
            ptsmnt.setInt(1, id);
            rs = ptsmnt.executeQuery();
            while(rs.next()){
                txtpass.setText(rs.getString("password"));
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this,SYS_ERROR);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,SYS_ERROR);
        }
         txtstatus.setSelectedItem(d1.getValueAt(selectIndex, 2).toString());
         txtisadmin.setSelectedItem(d1.getValueAt(selectIndex, 3).toString());
         
         
         
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        int selectIndex = jTable1. getSelectedRow();
        
        int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
        
        int dialogResult = JOptionPane.showConfirmDialog(this, DELETE_RECORD, "Warning",JOptionPane.YES_NO_OPTION);
        
        if(dialogResult == JOptionPane.YES_OPTION){
            
           try {
            Connection conl = createConnection();
            ptsmnt = conl.prepareStatement(DELETE_ACCOUNT);
            ptsmnt.setInt(1, id);
            ptsmnt.executeUpdate();
            JOptionPane.showMessageDialog(this, ACCT_DELETED);
            table_update();
            edithistory(ACCT_ID_DELETED,  id);   
            jButton1.setEnabled(true);
            txtuser.setText("");
            txtpass.setText("");
            txtuser.requestFocus();
            
           } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this,SYS_ERROR);
           } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,SYS_ERROR);
            }
            
        }
        
           
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        this.hide();
        new PackType(lname,isAdmin,pass).setVisible(true);   
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
       this.hide();
       new BloodType(lname,isAdmin,pass).setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        this.hide();
        new BloodPack(lname,isAdmin,pass).setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        this.hide();
        new EditHistory(lname,isAdmin,pass).setVisible(true);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void txtuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtuserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtuserActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jButton1.setEnabled(true);
        txtuser.setText("");
        txtpass.setText("");
        txtuser.requestFocus();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accounts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> txtisadmin;
    private javax.swing.JPasswordField txtpass;
    private javax.swing.JComboBox<String> txtstatus;
    private javax.swing.JTextField txtuser;
    // End of variables declaration//GEN-END:variables

    @Override
    public Connection createConnection() throws ClassNotFoundException, SQLException {
        Connection connection = null;
        //enroll the Oracle MySql JDBC Driver
	Class.forName(JDBC_DRIVER_NAME);
	//create or get a Connection
	connection = DriverManager.getConnection(JDBC_URL,DB_USER_NAME, DB_PASSWORD);
	if (connection != null) {
            
	} else {
            JOptionPane.showMessageDialog(this, DB_INVALID);
	}
	return connection;
    }
}






